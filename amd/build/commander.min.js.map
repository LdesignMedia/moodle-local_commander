{"version":3,"file":"commander.min.js","sources":["../src/commander.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n// Initialize the module with imports.\nimport notification from 'core/notification';\nimport Log from 'core/log';\n\n/**\n * Keyboard key codes.\n */\nconst ESCAPE = 27;\nconst ENTER = 13;\nconst ARROWUP = 38;\nconst ARROWDOWN = 40;\n\n/**\n * Options we can set from AMD.\n */\nconst commanderAppOptions = {\n    courseid: '',\n    keys: [],\n};\n\n/**\n * Set options based on provided parameters.\n * @param {object} options\n */\nfunction setOptions(options) {\n    Object.keys(commanderAppOptions).forEach((key) => {\n        if (options.hasOwnProperty(key)) {\n            const vartype = typeof commanderAppOptions[key];\n            if (vartype === 'boolean') {\n                commanderAppOptions[key] = Boolean(options[key]);\n            } else if (vartype === 'number') {\n                commanderAppOptions[key] = Number(options[key]);\n            } else if (vartype === 'string') {\n                commanderAppOptions[key] = String(options[key]);\n            } else {\n                commanderAppOptions[key] = options[key];\n            }\n        }\n    });\n}\n\n/**\n * The main commander application.\n */\nconst commanderApp = {\n    /**\n     * Modal DOM element instance.\n     */\n    mainModal: null,\n\n    /**\n     * Modal background layer DOM element.\n     */\n    mainModalBackLayer: null,\n\n    /**\n     * Input field element.\n     */\n    mainModalCommand: null,\n\n    /**\n     * Stores all list item elements.\n     */\n    liSet: null,\n\n    /**\n     * Flag to check if the modal is open.\n     */\n    isShow: false,\n\n    /**\n     * Stores the response JSON.\n     */\n    json: '',\n\n    /**\n     * Render the UI.\n     */\n    render() {\n        let timer = 0;\n        Log.debug('Rendering UI');\n\n        // Create the modal HTML.\n        const modalHtml = `\n            <div id=\"local_commander_modal\" class=\"local_commander\">\n                <div class=\"local_commander-header\">\n                    <h2>${M.util.get_string('js:header', 'local_commander')}</h2>\n                </div>\n                <div class=\"local_commander-body\">\n                    <div><ul></ul></div>\n                </div>\n                <input type=\"text\" name=\"local_commander_command\" id=\"local_commander_command\"\n                 placeholder=\"${M.util.get_string('js:command_placeholder', 'local_commander')}\">\n            </div>\n            <div id=\"local_commander_back_layer\"></div>\n        `;\n\n        // Append the modal to the body.\n        document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n        // Set references to the modal elements.\n        this.mainModal = document.getElementById('local_commander_modal');\n        this.mainModalBackLayer = document.getElementById('local_commander_back_layer');\n        this.mainModalCommand = document.getElementById('local_commander_command');\n\n        // Set the modal height.\n        this.setHeight();\n\n        // Add event listener to the background layer to hide the modal.\n        this.mainModalBackLayer.addEventListener('click', () => {\n            this.hide();\n        });\n\n        // Optimize search with a timeout.\n        this.mainModalCommand.addEventListener('keydown', (e) => {\n            const keyboardCode = e.keyCode || e.which;\n            Log.debug(`Code pressed: ${keyboardCode}`);\n\n            if ([ESCAPE, ENTER, ARROWUP, ARROWDOWN].includes(keyboardCode)) {\n                return;\n            }\n\n            Log.debug('Searching');\n\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                this.search(this.mainModalCommand.value);\n            }, 100);\n        });\n\n        // Load the menu content once.\n        if (this.json === '') {\n            this.loadMenu();\n        }\n    },\n\n    /**\n     * Start the commander.\n     */\n    start() {\n        window.addEventListener('keydown', (e) => {\n            const keyboardCode = e.keyCode || e.which;\n            Log.debug(`Code pressed: ${keyboardCode}`);\n            Log.debug(`Trigger keys: ${commanderAppOptions.keys}`);\n            Log.debug(`Commander is visible: ${this.isShow}`);\n\n            // Check for arrow keys when the modal is open.\n            if (this.isShow) {\n                switch (keyboardCode) {\n                    case ESCAPE:\n                        this.hide();\n                        break;\n                    case ENTER:\n                        e.preventDefault();\n                        this.goToCommand();\n                        break;\n                    case ARROWUP:\n                        e.preventDefault();\n                        this.arrowUp();\n                        break;\n                    case ARROWDOWN:\n                        e.preventDefault();\n                        this.arrowDown();\n                        break;\n                }\n                return;\n            }\n\n            // Check if the pressed key is one of the trigger keys.\n            if (commanderAppOptions.keys.includes(keyboardCode.toString())) {\n                Log.debug('Commander keyboard key triggered');\n\n                // Validate that we're not in an editable area.\n                const target = e.target;\n                const tagName = target.tagName.toUpperCase();\n                if (['INPUT', 'SELECT', 'TEXTAREA'].includes(tagName) || target.isContentEditable) {\n                    Log.debug('Ignoring keypress in editable element');\n                    return;\n                }\n\n                e.preventDefault();\n\n                // Render the modal if it hasn't been created yet.\n                if (!this.mainModal) {\n                    this.render();\n                }\n\n                Log.debug('Opening commander');\n\n                if (this.isShow) {\n                    this.hide();\n                } else {\n                    this.show();\n                }\n            }\n        });\n    },\n\n    /**\n     * Highlight words in the menu items.\n     * @param {Node} node\n     * @param {string} word\n     */\n    highlightWord(node, word) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            const pos = node.data.toUpperCase().indexOf(word);\n            if (pos >= 0) {\n                const spannode = document.createElement('span');\n                spannode.className = 'highlight';\n                const middlebit = node.splitText(pos);\n                middlebit.splitText(word.length);\n                const middleclone = middlebit.cloneNode(true);\n                spannode.appendChild(middleclone);\n                middlebit.parentNode.replaceChild(spannode, middlebit);\n            }\n        } else if (node.nodeType === Node.ELEMENT_NODE && node.childNodes && !['SCRIPT', 'STYLE'].includes(node.tagName)) {\n            node.childNodes.forEach((child) => {\n                this.highlightWord(child, word);\n            });\n        }\n    },\n\n    /**\n     * Navigate up in the menu.\n     */\n    arrowUp() {\n        Log.debug('Navigating up');\n        const activeItem = this.mainModal.querySelector('ul li.active');\n        let prevItem = null;\n\n        if (activeItem) {\n            activeItem.classList.remove('active');\n            prevItem = activeItem.previousElementSibling;\n            while (prevItem && prevItem.style.display === 'none') {\n                prevItem = prevItem.previousElementSibling;\n            }\n        }\n\n        if (prevItem) {\n            prevItem.classList.add('active');\n        } else if (activeItem) {\n            activeItem.classList.add('active');\n        }\n\n        this.scrollToActiveItem();\n    },\n\n    /**\n     * Navigate down in the menu.\n     */\n    arrowDown() {\n        Log.debug('Navigating down');\n        const activeItem = this.mainModal.querySelector('ul li.active');\n        let nextItem = null;\n\n        if (activeItem) {\n            activeItem.classList.remove('active');\n            nextItem = activeItem.nextElementSibling;\n            while (nextItem && nextItem.style.display === 'none') {\n                nextItem = nextItem.nextElementSibling;\n            }\n        }\n\n        if (nextItem) {\n            nextItem.classList.add('active');\n        } else {\n            const items = Array.from(this.mainModal.querySelectorAll('ul li'));\n            const lastVisibleItem = items.reverse().find((item) => item.style.display !== 'none');\n            if (lastVisibleItem) {\n                lastVisibleItem.classList.add('active');\n            }\n        }\n\n        this.scrollToActiveItem();\n    },\n\n    /**\n     * Scroll to the active menu item.\n     */\n    scrollToActiveItem() {\n        const container = this.mainModal.querySelector('.local_commander-body div');\n        const activeItem = this.mainModal.querySelector('li.active');\n\n        if (activeItem && container) {\n            container.scrollTop = activeItem.offsetTop - container.offsetTop - 10;\n        }\n    },\n\n    /**\n     * Execute the selected command.\n     */\n    goToCommand() {\n        Log.debug('Executing command');\n        const activeLink = this.mainModal.querySelector('ul li.active a');\n        if (activeLink) {\n            const link = activeLink.getAttribute('href');\n            if (link !== '#') {\n                window.location.href = link;\n            }\n        }\n    },\n\n    /**\n     * Load the menu from the server.\n     */\n    loadMenu() {\n        fetch(`${M.cfg.wwwroot}/local/commander/ajax.php?courseid=${commanderAppOptions.courseid}`, {\n            method: 'GET',\n            credentials: 'same-origin',\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                Log.debug(data);\n                this.json = data;\n\n                this.setMenu();\n                this.setHeight();\n            })\n            .catch(() => {\n                notification.alert('js:error_parsing', 'local_commander');\n            });\n    },\n\n    /**\n     * Search the menu for the input word.\n     * @param {string} word\n     */\n    search(word) {\n        // Remove active state and show all items.\n        const listItems = this.mainModal.querySelectorAll('.local_commander-body ul li');\n        listItems.forEach((li) => {\n            li.style.display = '';\n            li.classList.remove('active');\n        });\n\n        // Remove existing highlights.\n        const highlights = this.mainModal.querySelectorAll('.highlight');\n        highlights.forEach((span) => {\n            this.removeHighlight(span.parentNode);\n        });\n\n        if (word !== '') {\n            const wordUpper = word.toUpperCase();\n            let firstHighlighted = null;\n\n            this.liSet.forEach((li) => {\n                this.highlightWord(li, wordUpper);\n                if (!firstHighlighted && li.querySelector('.highlight')) {\n                    firstHighlighted = li;\n                }\n            });\n\n            // Set the first matching item as active.\n            if (firstHighlighted) {\n                firstHighlighted.classList.add('active');\n            }\n\n            // Hide items that don't match.\n            listItems.forEach((li) => {\n                if (!li.querySelector('.highlight')) {\n                    li.style.display = 'none';\n                }\n            });\n        }\n    },\n\n    /**\n     * Build the command menu.\n     */\n    setMenu() {\n        Log.debug('Setting up menu');\n\n        let html = '';\n\n        if (commanderAppOptions.courseid > 0) {\n            Log.debug('Including course administration menu');\n            html += this.renderMenuItems(this.json.courseadmin, '');\n        }\n\n        html += this.renderMenuItems(this.json.admin, '');\n\n        const ulElement = this.mainModal.querySelector('.local_commander-body ul');\n        ulElement.innerHTML = html;\n\n        this.liSet = this.mainModal.querySelectorAll('.local_commander-body ul li');\n    },\n\n    /**\n     * Render menu items recursively.\n     * @param {object} item\n     * @param {string} parentName\n     * @returns {string}\n     */\n    renderMenuItems(item, parentName) {\n        if (!item.name) {\n            return '';\n        }\n\n        let html = '';\n\n        const fullName = parentName ? `${parentName} → ${item.name}` : item.name;\n        html += `<li><a href=\"${item.link}\">${fullName}</a></li>`;\n\n        if (item.haschildren) {\n            item.children.forEach((child) => {\n                html += this.renderMenuItems(child, fullName);\n            });\n        }\n\n        return html;\n    },\n\n    /**\n     * Show the modal.\n     */\n    show() {\n        this.mainModal.style.display = 'block';\n        this.mainModalBackLayer.style.display = 'block';\n        this.isShow = true;\n\n        // Focus on the search field.\n        this.mainModalCommand.focus();\n    },\n\n    /**\n     * Hide the modal.\n     */\n    hide() {\n        this.mainModal.style.display = 'none';\n        this.mainModalBackLayer.style.display = 'none';\n        this.isShow = false;\n    },\n\n    /**\n     * Set the modal height to 50% of the viewport.\n     */\n    setHeight() {\n        const height = Math.round(window.innerHeight / 2);\n        this.mainModal.style.height = `${height}px`;\n        const bodyDiv = this.mainModal.querySelector('.local_commander-body div');\n        if (bodyDiv) {\n            bodyDiv.style.height = `${height - 100}px`;\n        }\n    },\n\n    /**\n     * Remove highlights from text nodes.\n     * @param {Node} node\n     */\n    removeHighlight(node) {\n        node.innerHTML = node.textContent;\n    },\n};\n\n/**\n * Initialize the module.\n * @param {object} params\n */\nfunction init(params) {\n    // Set the options.\n    setOptions(params);\n\n    // Wait for the DOM to be fully loaded.\n    document.addEventListener('DOMContentLoaded', () => {\n        Log.debug('DOM fully loaded - initializing commanderApp');\n        Log.debug(commanderAppOptions);\n        commanderApp.start();\n    });\n}\n\nexport default {\n    init,\n};\n"],"names":["ESCAPE","ENTER","ARROWUP","ARROWDOWN","commanderAppOptions","courseid","keys","commanderApp","mainModal","mainModalBackLayer","mainModalCommand","liSet","isShow","json","render","timer","debug","modalHtml","M","util","get_string","document","body","insertAdjacentHTML","getElementById","setHeight","addEventListener","hide","e","keyboardCode","keyCode","which","includes","clearTimeout","setTimeout","search","this","value","loadMenu","start","window","preventDefault","goToCommand","arrowUp","arrowDown","toString","target","tagName","toUpperCase","isContentEditable","show","highlightWord","node","word","nodeType","Node","TEXT_NODE","pos","data","indexOf","spannode","createElement","className","middlebit","splitText","length","middleclone","cloneNode","appendChild","parentNode","replaceChild","ELEMENT_NODE","childNodes","forEach","child","activeItem","querySelector","prevItem","classList","remove","previousElementSibling","style","display","add","scrollToActiveItem","nextItem","nextElementSibling","lastVisibleItem","Array","from","querySelectorAll","reverse","find","item","container","scrollTop","offsetTop","activeLink","link","getAttribute","location","href","fetch","cfg","wwwroot","method","credentials","then","response","setMenu","catch","alert","listItems","li","span","removeHighlight","wordUpper","firstHighlighted","html","renderMenuItems","courseadmin","admin","innerHTML","parentName","name","fullName","haschildren","children","focus","height","Math","round","innerHeight","bodyDiv","textContent","init","params","options","Object","key","hasOwnProperty","vartype","Boolean","Number","String"],"mappings":"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"}
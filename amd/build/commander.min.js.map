{"version":3,"file":"commander.min.js","sources":["../src/commander.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n// Initialize the module with imports.\n// This file is part of Moodle - http://moodle.org/\n// Moodle is free software: you can redistribute it and/or modify it under the terms of the GNU GPL v3 or later.\n\nimport notification from 'core/notification';\nimport Log from 'core/log';\nimport { uFuzzy } from 'local_commander/ufuzzy';\n\n/**\n * Keyboard key codes mapped to their respective event.key values.\n */\nconst KEYS = {\n    ESCAPE: 'Escape',\n    ENTER: 'Enter',\n    ARROW_UP: 'ArrowUp',\n    ARROW_DOWN: 'ArrowDown',\n};\n\n/**\n * Options we can set from AMD.\n */\nconst commanderAppOptions = {\n    courseid: '',\n    keys: [],\n};\n\n/**\n * Normalize keys into an array of integers.\n * Accepts array, comma-separated string, or number.\n * @param {Array|string|number} keys\n * @returns {number[]}\n */\nfunction normalizeKeys(keys) {\n    if (Array.isArray(keys)) {\n        return keys.map((k) => parseInt(k, 10)).filter((n) => Number.isFinite(n));\n    }\n    if (typeof keys === 'number') {\n        return [keys];\n    }\n    if (typeof keys === 'string') {\n        return keys\n            .split(',')\n            .map((k) => parseInt(k, 10))\n            .filter((n) => Number.isFinite(n));\n    }\n    return [];\n}\n\n/**\n * Set options based on provided parameters.\n * @param {object} options\n */\nfunction setOptions(options) {\n    Object.keys(commanderAppOptions).forEach((key) => {\n        if (options.hasOwnProperty(key)) {\n            commanderAppOptions[key] = key === 'keys' ? normalizeKeys(options[key]) : options[key];\n        }\n    });\n}\n\n/**\n * The main commander application.\n */\nconst commanderApp = {\n    /**\n     * Modal DOM element instance.\n     */\n    mainModal: null,\n\n    /**\n     * Modal background layer DOM element.\n     */\n    mainModalBackLayer: null,\n\n    /**\n     * Input field element.\n     */\n    mainModalCommand: null,\n\n    /**\n     * Stores all list item elements.\n     * @type {NodeListOf}\n     */\n    liSet: null,\n\n    /**\n     * Flag to check if the modal is open.\n     */\n    isShow: false,\n\n    /**\n     * Stores the response JSON.\n     */\n    json: null,\n\n    /**\n     * uFuzzy instance.\n     */\n    ufuzzy: null,\n\n    /**\n     * Array of text items.\n     */\n    textItems: [],\n\n    /**\n     * Render the UI.\n     */\n    render() {\n        Log.debug('Rendering UI');\n\n        // Create the modal HTML using a template literal.\n        const modalHtml = `\n            <div id=\"local_commander_modal\" role=\"dialog\" aria-modal=\"true\"\n             aria-labelledby=\"local_commander_header\">\n                <div class=\"local_commander-header\">\n                    <h2 id=\"local_commander_header\">${M.util.get_string('js:header', 'local_commander')}</h2>\n                </div>\n                <div class=\"local_commander-body\">\n                    <div><ul></ul></div>\n                </div>\n                <input type=\"text\" name=\"local_commander_command\" id=\"local_commander_command\"\n                 placeholder=\"${M.util.get_string('js:command_placeholder', 'local_commander')}\"\n                  aria-label=\"${M.util.get_string('js:command_placeholder', 'local_commander')}\">\n            </div>\n            <div id=\"local_commander_back_layer\"></div>\n        `;\n\n        // Append the modal to the body.\n        document.body.insertAdjacentHTML('beforeend', modalHtml);\n\n        // Set references to the modal elements.\n        this.mainModal = document.getElementById('local_commander_modal');\n        this.mainModalBackLayer = document.getElementById('local_commander_back_layer');\n        this.mainModalCommand = document.getElementById('local_commander_command');\n\n        // Add event listeners.\n        this.addEventListeners();\n\n        // Load the menu content once.\n        if (!this.json) {\n            this.loadMenu();\n        }\n    },\n\n    /**\n     * Start the commander.\n     */\n    start() {\n        window.addEventListener('keydown', (e) => {\n            Log.debug(`Key pressed: ${e.keyCode}`);\n            Log.debug(`Trigger keys: ${commanderAppOptions.keys}`);\n            Log.debug(`Commander is visible: ${this.isShow}`);\n\n            // Check for arrow keys when the modal is open.\n            if (this.isShow) {\n                switch (e.key) {\n                    case KEYS.ESCAPE:\n                        this.hide();\n                        break;\n                    case KEYS.ENTER:\n                        e.preventDefault();\n                        this.goToCommand();\n                        break;\n                    case KEYS.ARROW_UP:\n                        e.preventDefault();\n                        this.navigateMenu('up');\n                        break;\n                    case KEYS.ARROW_DOWN:\n                        e.preventDefault();\n                        this.navigateMenu('down');\n                        break;\n                    default:\n                        break;\n                }\n                return;\n            }\n\n            // Check if the pressed key is one of the trigger keys.\n            if (commanderAppOptions.keys.includes(e.keyCode)) {\n                Log.debug('Commander keyboard key triggered');\n\n                // Validate that we're not in an editable area.\n                const target = e.target;\n                const tagName = target.tagName.toUpperCase();\n                if (['INPUT', 'SELECT', 'TEXTAREA'].includes(tagName) || target.isContentEditable) {\n                    Log.debug('Ignoring keypress in editable element');\n                    return;\n                }\n\n                e.preventDefault();\n\n                // Render the modal if it hasn't been created yet.\n                if (!this.mainModal) {\n                    this.render();\n                }\n\n                Log.debug('Opening commander');\n\n                if (this.isShow) {\n                    this.hide();\n                } else {\n                    this.show();\n                }\n            }\n        });\n    },\n\n    /**\n     * Add event listeners to modal elements.\n     */\n    addEventListeners() {\n        // Close the modal when clicking the backdrop.\n        this.mainModalBackLayer.addEventListener('click', () => {\n            this.hide();\n        });\n\n        // Optimize search with a debounced input event.\n        const debouncedSearch = this.debounce(() => {\n            this.search(this.mainModalCommand.value);\n        }, 200);\n\n        this.mainModalCommand.addEventListener('input', debouncedSearch);\n    },\n\n    /**\n     * Debounce function to limit the rate of function execution.\n     * @param {function} func\n     * @param {number} wait\n     * @returns {function}\n     */\n    debounce(func, wait) {\n        let timeout;\n        return function(...args) {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => func.apply(this, args), wait);\n        };\n    },\n\n    /**\n     * Navigate through the menu items.\n     * @param {string} direction - 'up' or 'down'\n     */\n    navigateMenu(direction) {\n        Log.debug(`Navigating ${direction}`);\n        const activeItem = this.mainModal.querySelector('ul li.active');\n        let newItem = null;\n\n        if (activeItem) {\n            activeItem.classList.remove('active');\n            newItem = direction === 'up' ? activeItem.previousElementSibling : activeItem.nextElementSibling;\n\n            while (newItem && newItem.style.display === 'none') {\n                newItem = direction === 'up' ? newItem.previousElementSibling : newItem.nextElementSibling;\n            }\n        }\n\n        if (newItem) {\n            newItem.classList.add('active');\n        } else if (activeItem) {\n            activeItem.classList.add('active');\n        }\n\n        this.scrollToActiveItem();\n    },\n\n    /**\n     * Scroll to the active menu item.\n     */\n    scrollToActiveItem() {\n        const container = this.mainModal.querySelector('.local_commander-body div');\n        const activeItem = this.mainModal.querySelector('li.active');\n\n        if (activeItem && container) {\n            container.scrollTop = activeItem.offsetTop - container.offsetTop - 10;\n        }\n    },\n\n    /**\n     * Execute the selected command.\n     */\n    goToCommand() {\n        Log.debug('Executing command');\n        const activeLink = this.mainModal.querySelector('ul li.active a');\n        if (activeLink) {\n            const link = activeLink.getAttribute('href');\n            if (link !== '#') {\n                window.location.href = link;\n            }\n        }\n    },\n\n    /**\n     * Load the menu from the server.\n     */\n    async loadMenu() {\n        try {\n            const response = await fetch(`${M.cfg.wwwroot}/local/commander/ajax.php?courseid=${commanderAppOptions.courseid}`, {\n                method: 'GET',\n                credentials: 'same-origin',\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            this.json = await response.json();\n            Log.debug(this.json);\n            this.setMenu();\n        } catch (error) {\n            Log.error(error);\n            notification.alert(M.util.get_string('js:error_parsing', 'local_commander'));\n        }\n    },\n\n    /**\n     * Search the menu for the input word.\n     * @param {string} query\n     */\n    search(query) {\n\n        // Normalize the query.\n        const searchTerm = query.trim();\n\n        // Remove previous highlights and hide non-matching items.\n        this.liSet.forEach((li) => {\n            li.style.display = 'none';\n            li.classList.remove('active');\n        });\n\n        if (searchTerm === '') {\n            return;\n        }\n\n        let firstMatch = null;\n\n        const u = this.ufuzzy;\n        const idxs = u.filter(this.textItems, query);\n        const info = u.info(idxs, this.textItems, query);\n        const orders = u.sort(info, this.textItems, query);\n\n        // Show matching items.\n        orders.forEach((order, index) => {\n            const idx = idxs[index];\n            const li = this.liSet[idx];\n            if (li) {\n                li.style.display = '';\n\n                // Highlight the first result.\n                if (firstMatch === null) {\n                    firstMatch = li;\n                }\n\n                try {\n                    li.querySelector('a').innerHTML = uFuzzy.highlight(\n                        li.innerText,\n                        info.ranges[index],\n                    );\n                } catch (e) {\n                    Log.error('Error highlighting text:', e);\n                }\n            }\n        });\n\n        if (firstMatch) {\n            firstMatch.classList.add('active');\n            this.scrollToActiveItem();\n        }\n    },\n\n    /**\n     * Build the command menu.\n     */\n    setMenu() {\n        Log.debug('Setting up menu');\n\n        let html = '';\n\n        if (commanderAppOptions.courseid > 0 && this.json.courseadmin) {\n            Log.debug('Including course administration menu');\n            html += this.renderMenuItems(this.json.courseadmin, '');\n        }\n\n        if (this.json.admin) {\n            html += this.renderMenuItems(this.json.admin, '');\n        }\n\n        // Initialize uFuzzy with the menu items.\n        this.ufuzzy = new uFuzzy();\n\n        const ulElement = this.mainModal.querySelector('.local_commander-body ul');\n        ulElement.innerHTML = html;\n\n        this.liSet = this.mainModal.querySelectorAll('.local_commander-body ul li');\n\n        this.liSet.forEach((li) => {\n            this.textItems.push(li.innerText);\n        });\n    },\n\n    /**\n     * Render menu items recursively.\n     * @param {object} item\n     * @param {string} parentName\n     * @returns {string}\n     */\n    renderMenuItems(item, parentName) {\n        if (!item.name) {\n            return '';\n        }\n\n        let html = '';\n\n        const fullName = parentName ? `${parentName} → ${item.name}` : item.name;\n        html += `<li><a href=\"${item.link}\">${fullName}</a></li>`;\n\n        if (item.haschildren && item.children) {\n            item.children.forEach((child) => {\n                html += this.renderMenuItems(child, fullName);\n            });\n        }\n\n        return html;\n    },\n\n    /**\n     * Show the modal.\n     */\n    show() {\n        this.mainModal.style.display = 'block';\n        this.mainModalBackLayer.style.display = 'block';\n        this.isShow = true;\n\n        // Focus on the search field.\n        this.mainModalCommand.focus();\n    },\n\n    /**\n     * Hide the modal.\n     */\n    hide() {\n        this.mainModal.style.display = 'none';\n        this.mainModalBackLayer.style.display = 'none';\n        this.isShow = false;\n\n        // Clear the search input.\n        this.mainModalCommand.value = '';\n\n        // Reset the menu.\n        this.search('');\n    },\n};\n\n/**\n * Initialize the module.\n * @param {object} params\n */\nfunction init(params) {\n    // Set the options.\n    setOptions(params);\n\n    // Wait for the DOM to be fully loaded.\n    Log.debug('Local commander v4.5.0 initialized');\n    Log.debug(commanderAppOptions);\n\n    commanderApp.start();\n}\n\nexport default {\n    init,\n};\n"],"names":["KEYS","commanderAppOptions","courseid","keys","setOptions","options","Object","forEach","key","hasOwnProperty","Array","isArray","map","k","parseInt","filter","n","Number","isFinite","split","commanderApp","mainModal","mainModalBackLayer","mainModalCommand","liSet","isShow","json","ufuzzy","textItems","render","debug","modalHtml","M","util","get_string","document","body","insertAdjacentHTML","getElementById","addEventListeners","this","loadMenu","start","window","addEventListener","e","keyCode","hide","preventDefault","goToCommand","navigateMenu","includes","target","tagName","toUpperCase","isContentEditable","show","debouncedSearch","debounce","search","value","func","wait","timeout","args","clearTimeout","setTimeout","apply","direction","activeItem","querySelector","newItem","classList","remove","previousElementSibling","nextElementSibling","style","display","add","scrollToActiveItem","container","scrollTop","offsetTop","activeLink","link","getAttribute","location","href","response","fetch","cfg","wwwroot","method","credentials","ok","Error","setMenu","error","alert","query","searchTerm","trim","li","firstMatch","u","idxs","info","sort","order","index","idx","innerHTML","uFuzzy","highlight","innerText","ranges","html","courseadmin","renderMenuItems","admin","querySelectorAll","push","item","parentName","name","fullName","haschildren","children","child","focus","init","params"],"mappings":"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"}
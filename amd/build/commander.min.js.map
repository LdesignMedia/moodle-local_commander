{"version":3,"file":"commander.min.js","sources":["../src/commander.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JS to  the popup and interact with it.\n *\n *\n * Tested in Moodle 3.8\n *\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @copyright 2018 MFreak.nl\n * @author    Luuk Verhoeven\n **/\n/* eslint-disable no-invalid-this */\ndefine(['jquery', 'core/notification', 'core/log'], function($, notification, Log) {\n    'use strict';\n\n    // Keyboard codes.\n    var ESCAPE = 27,\n        ENTER = 13,\n        ARROWUP = 38,\n        ARROWDOWN = 40;\n\n    /**\n     * scroll to element.\n     *\n     * @param {string} elem\n     * @param {int} speed\n     * @returns {$}\n     */\n    $.fn.scrollTo = function(elem, speed) {\n        $(this).stop().animate({\n            scrollTop: $(this).scrollTop() - $(this).offset().top + $(elem).offset().top - 10\n        }, speed == undefined ? 1000 : speed);\n        return this;\n    };\n\n    /**\n     * Options we can set from amd.\n     * @type {{selector: string, blockid: number}}\n     */\n    var commanderAppOptions = {\n        courseid: '',\n        keys: [],\n    };\n\n    /**\n     * Set options base on listed options\n     * @param {object} options\n     */\n    var setOptions = function(options) {\n        \"use strict\";\n        var key, vartype;\n        for (key in commanderAppOptions) {\n            if (commanderAppOptions.hasOwnProperty(key) && options.hasOwnProperty(key)) {\n\n                // Casting to prevent errors.\n                vartype = typeof commanderAppOptions[key];\n                if (vartype === \"boolean\") {\n                    commanderAppOptions[key] = Boolean(options[key]);\n                } else if (vartype === 'number') {\n                    commanderAppOptions[key] = Number(options[key]);\n                } else if (vartype === 'string') {\n                    commanderAppOptions[key] = String(options[key]);\n                } else {\n                    commanderAppOptions[key] = options[key];\n                }\n            }\n        }\n    };\n\n    /**\n     * Commander plugin.\n     * @type {{}}\n     */\n    const commanderApp = {\n\n        /**\n         * Modal jQuery element instance.\n         */\n        $mainModal: false,\n\n        /**\n         * Modal BG jQuery element instance.\n         */\n        $mainModalBackLayer: false,\n\n        /**\n         * Input field\n         */\n        $mainModalCommand: false,\n\n        /**\n         * Stores all li elements\n         */\n        $liSet: false,\n\n        /**\n         * Flag to check if modal is open.\n         */\n        isShow: false,\n\n        /**\n         * Save response\n         */\n        json: '',\n\n        /**\n         * Render UI.\n         */\n        render: function() {\n            \"use strict\";\n            var timer = 0;\n            Log.debug('render UI');\n\n            // @TODO we should use mustache.\n            $('body').append('<div id=\"local_commander_modal\" class=\"local_commander\">' +\n                '<div class=\"local_commander-header\"><h2>' + M.util.get_string('js:header', 'local_commander') + '</h2></div>' +\n                '<div class=\"local_commander-body\">' +\n                '</div>' +\n                '<input type=\"text\" name=\"local_commander_command\" id=\"local_commander_command\" placeholder=\"' +\n                M.util.get_string('js:command_placeholder', 'local_commander') + '\">' +\n                '</div><div id=\"local_commander_back_layer\"></div>');\n\n            // Set references.\n            commanderApp.$mainModal = $('#local_commander_modal');\n            commanderApp.$mainModalBackLayer = $('#local_commander_back_layer');\n            commanderApp.$mainModalCommand = $('#local_commander_command');\n\n            commanderApp.setHeight();\n\n            commanderApp.$mainModalBackLayer.on('click', function() {\n                commanderApp.hide();\n            });\n\n            // Search set some timeout optimize speed.\n            commanderApp.$mainModalCommand.on('keydown', function(e) {\n                var keyboardCode = e.keyCode || e.which;\n                Log.debug('Code pressed:' + keyboardCode);\n\n                switch (keyboardCode) {\n                    case ESCAPE:\n                    case ENTER:\n                    case ARROWUP:\n                    case ARROWDOWN:\n                        return;\n                }\n\n                Log.debug('Searching');\n\n                clearTimeout(timer);\n                timer = setTimeout(function() {\n                    commanderApp.search(commanderApp.$mainModalCommand.val());\n                }, 100);\n            });\n\n            // Loading the menu content once.\n            if (commanderApp.json === '') {\n                commanderApp.loadMenu();\n            }\n        },\n\n        /**\n         * Start the commander.\n         */\n        start: function() {\n            // Set holders.\n            commanderApp.$mainModal = $('#local_commander_modal');\n\n            $(window).on('keydown', function(e) {\n\n                var keyboardCode = e.keyCode || e.which;\n                Log.debug('Code pressed:', keyboardCode);\n                Log.debug('Trigger keys:', commanderAppOptions.keys);\n                Log.debug('Commander is visible:', commanderApp.isShow);\n\n                // Check for arrow keys.\n                if (commanderApp.isShow) {\n                    switch (keyboardCode) {\n                        case ESCAPE:\n                            commanderApp.hide();\n                            break;\n\n                        case ENTER:\n                            e.preventDefault();\n                            commanderApp.goToCommand();\n                            break;\n\n                        case ARROWUP:\n                            e.preventDefault();\n                            commanderApp.arrowUp();\n                            break;\n\n                        case ARROWDOWN:\n                            e.preventDefault();\n                            commanderApp.arrowDown();\n                            break;\n                    }\n                    return;\n                }\n\n                if (commanderAppOptions.keys.indexOf(keyboardCode.toString()) !== -1) {\n\n                    Log.debug('Commander keyboard key triggered');\n\n                    // Validate we not triggered in an editable area.\n                    if (e.target.tagName == 'INPUT' || e.target.tagName == 'SELECT'\n                        || e.target.tagName == 'TEXTAREA' || e.target.isContentEditable) {\n                        Log.debug('Hide when we are in an editable element');\n                        return;\n                    }\n\n                    e.preventDefault();\n\n                    // Only render if needed.\n                    if (commanderApp.$mainModal.length == 0) {\n                        commanderApp.render();\n                    }\n\n                    Log.debug('Open commander.');\n\n                    if (commanderApp.isShow) {\n                        commanderApp.hide();\n                    } else {\n                        commanderApp.show();\n                    }\n                }\n            });\n        },\n\n        /**\n         * Highlight words\n         *\n         * @param {object} node\n         * @param {string} word\n         */\n        highlightWord: function(node, word) {\n            if (node.nodeType == 3) {\n                var pos = node.data.toUpperCase().indexOf(word);\n                if (pos >= 0) {\n                    var spannode = document.createElement('span');\n                    spannode.className = 'highlight';\n                    spannode.style.backgroundColor = '#f4bd21';\n                    var middlebit = node.splitText(pos);\n                    var middleclone = middlebit.cloneNode(true);\n                    spannode.appendChild(middleclone);\n                    middlebit.parentNode.replaceChild(spannode, middlebit);\n                }\n\n            } else if (node.nodeType == 1 && node.childNodes) {\n                for (var i = 0; i < node.childNodes.length; ++i) {\n                    i += commanderApp.highlightWord(node.childNodes[i], word);\n                }\n            }\n        },\n\n        /**\n         * Action on keyboard arrow key UP.\n         */\n        arrowUp: function() {\n            Log.debug('arrowUp');\n            var $el = $('#local_commander_modal ul li.active'),\n                $prev = $el.closest(\"li\").prevAll(\"li:visible\").eq(0);\n\n            if ($el.length) {\n                $el.removeClass('active');\n            }\n\n            if ($prev.length) {\n                $prev.addClass('active');\n            } else {\n                $el.addClass('active');\n            }\n\n            //\n            commanderApp.scrollTo();\n        },\n\n        /**\n         * Action on keyboard arrow key DOWN.\n         */\n        arrowDown: function() {\n            Log.debug('arrowDown');\n            var $el = $('#local_commander_modal ul li.active'),\n                $next = $el.closest(\"li\").nextAll(\"li:visible\").eq(0);\n\n            if ($el.length) {\n                $el.removeClass('active');\n            }\n            if ($next.length) {\n                $next.addClass('active');\n            } else {\n                $('#local_commander_modal ul li:visible').last().addClass('active');\n            }\n            //\n            commanderApp.scrollTo();\n        },\n\n        /**\n         * Scroll to active item.\n         */\n        scrollTo: function() {\n            $('#local_commander_modal .local_commander-body div').scrollTo('#local_commander_modal li.active', 200);\n        },\n\n        /**\n         * The command that we need to execute.\n         */\n        goToCommand: function() {\n            Log.debug('goToCommand');\n            // Check if there is a element selected.\n            // Check if the element has link.\n            // TODO maybe add way to execute other type of commands.\n            var $el = $('#local_commander_modal ul li.active a');\n            if ($el) {\n                var link = $el.attr('href');\n                if (link != '#') {\n                    window.location = link;\n                }\n            }\n        },\n\n        /**\n         * Load menu\n         */\n        loadMenu: function() {\n            \"use strict\";\n\n            // TODO use the default webservice from Moodle instead.\n            $.ajax({\n                url: M.cfg.wwwroot + '/local/commander/ajax.php',\n                method: \"GET\",\n                data: {\n                    'courseid': commanderAppOptions.courseid\n                },\n                dataType: \"json\",\n            }).done(function(response) {\n                Log.debug(response);\n                commanderApp.json = response;\n\n                commanderApp.setMenu();\n                commanderApp.setHeight();\n            }).fail(function() {\n                notification.alert('js:error_parsing', 'local_commander');\n            });\n        },\n\n        /**\n         * Search in the commands.\n         * @param {string} word\n         */\n        search: function(word) {\n            \"use strict\";\n\n            // Remove active.\n            $('.local_commander-body ul li').show();\n            commanderApp.$liSet.find('li.active').removeClass('active');\n\n            // Remove highlights.\n            commanderApp.$liSet.find(\"span.highlight\").each(function() {\n                commanderApp.removeHighlight(this.parentNode);\n            });\n\n            if (word !== '') {\n\n                commanderApp.$liSet.children().each(function() {\n                    commanderApp.highlightWord(this, word.toUpperCase());\n                });\n\n                // Set active li item.\n                $('.local_commander-body span.highlight').first().parent().parent().addClass('active');\n\n                // Hide others.\n                $('.local_commander-body ul li:not(:has(span))').hide();\n            }\n        },\n\n        /**\n         * Build the ul command list.\n         */\n        setMenu: function() {\n            \"use strict\";\n            Log.debug('setMenu() ');\n\n            var html = '<div><ul>';\n\n            // Only do things when needed.\n            if (commanderAppOptions.courseid > 0) {\n                Log.debug('Has course param.');\n                html += commanderApp.renderMenuItems(commanderApp.json.courseadmin, 1);\n            }\n\n            // Always try adding admin menu.\n            html += commanderApp.renderMenuItems(commanderApp.json.admin, 1);\n\n            html += '</ul></div>';\n            commanderApp.$mainModal.find('.local_commander-body').append(html);\n\n            commanderApp.$liSet = $('.local_commander-body ul');\n        },\n\n        /**\n         * Render items and add the correct attr.\n         *\n         * @param {object} child\n         * @param {int} depth\n         * @param {string} parentName\n         *\n         * @returns {string}\n         */\n        renderMenuItems: function(child, depth, parentName) {\n            \"use strict\";\n            var html = '';\n\n            // Check child.\n            if (!child.name) {\n                return html;\n            }\n\n            // Set parentName.\n            if (!parentName) {\n                parentName = '';\n            } else {\n                parentName += ' &rarr; ';\n            }\n\n            html += '<li>';\n\n            if (child.name) {\n                // Add the same to buffer.\n                //\n                html += '<a href=\"' + child.link + '\">' + parentName + child.name + '</a>';\n            }\n\n            if (child.haschildren) {\n                $.each(child.children, function(i, el) {\n                    html += commanderApp.renderMenuItems(el, depth + 1, parentName + child.name);\n                });\n            }\n\n            html += '</li>';\n            return html;\n        },\n\n        /**\n         * Show the modal\n         */\n        show: function() {\n            \"use strict\";\n            commanderApp.$mainModal.show();\n            commanderApp.$mainModalBackLayer.show();\n\n            commanderApp.isShow = true;\n\n            // Focus on search field.\n            commanderApp.$mainModalCommand.focus();\n        },\n\n        /**\n         * Hide the modal\n         */\n        hide: function() {\n            commanderApp.$mainModal.hide();\n            commanderApp.$mainModalBackLayer.hide();\n\n            commanderApp.isShow = false;\n        },\n\n        /**\n         * Set 50% of viewport height\n         */\n        setHeight: function() {\n            var height = Math.round($(window).height() / 2);\n            commanderApp.$mainModal.height(height);\n            $('.local_commander-body div').height(height - 100);\n        },\n\n        /**\n         * Remove highlight\n         * @param {object} node\n         */\n        removeHighlight: function(node) {\n            $(node).html($(node).text());\n        }\n    };\n\n    return {\n\n        /**\n         * Called from Moodle.\n         * @param {array} params\n         */\n        init: function(params) {\n\n            /**\n             * Set the options.\n             */\n            setOptions(params);\n\n            /**\n             * Wait for jQuery\n             */\n            $(document).ready(function() {\n                Log.debug('ready() - local commander v4.4');\n                Log.debug(commanderAppOptions);\n                commanderApp.start();\n            });\n        }\n    };\n});\n"],"names":["define","$","notification","Log","fn","scrollTo","elem","speed","this","stop","animate","scrollTop","offset","top","undefined","commanderAppOptions","courseid","keys","commanderApp","$mainModal","$mainModalBackLayer","$mainModalCommand","$liSet","isShow","json","render","timer","debug","append","M","util","get_string","setHeight","on","hide","e","keyboardCode","keyCode","which","clearTimeout","setTimeout","search","val","loadMenu","start","window","preventDefault","goToCommand","arrowUp","arrowDown","indexOf","toString","target","tagName","isContentEditable","length","show","highlightWord","node","word","nodeType","pos","data","toUpperCase","spannode","document","createElement","className","style","backgroundColor","middlebit","splitText","middleclone","cloneNode","appendChild","parentNode","replaceChild","childNodes","i","$el","$prev","closest","prevAll","eq","removeClass","addClass","$next","nextAll","last","link","attr","location","ajax","url","cfg","wwwroot","method","dataType","done","response","setMenu","fail","alert","find","each","removeHighlight","children","first","parent","html","renderMenuItems","courseadmin","admin","child","depth","parentName","name","haschildren","el","focus","height","Math","round","text","init","params","options","key","vartype","hasOwnProperty","Boolean","Number","String","setOptions","ready"],"mappings":"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"}
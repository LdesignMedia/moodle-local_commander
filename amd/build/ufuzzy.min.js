define("local_commander/ufuzzy",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;var uFuzzy=function(){const cmp=new Intl.Collator("en",{numeric:!0,sensitivity:"base"}).compare,inf=1/0,escapeRegExp=str=>str.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),PUNCT_RE=/\p{P}/gu,swapAlpha=(str,upper,lower)=>str.replace("A-Z",upper).replace("a-z",lower),OPTS={unicode:!1,alpha:null,interSplit:"[^A-Za-z\\d']+",intraSplit:"[a-z][A-Z]",interBound:"[^A-Za-z\\d]",intraBound:"[A-Za-z]\\d|\\d[A-Za-z]|[a-z][A-Z]",interLft:0,interRgt:0,interChars:".",interIns:inf,intraChars:"[a-z\\d']",intraIns:null,intraContr:"'[a-z]{1,2}\\b",intraMode:0,intraSlice:[1,inf],intraSub:null,intraTrn:null,intraDel:null,intraFilt:(term,match,index)=>!0,sort:(info,haystack,needle)=>{let{idx:idx,chars:chars,terms:terms,interLft2:interLft2,interLft1:interLft1,start:start,intraIns:intraIns,interIns:interIns}=info;return idx.map(((v,i)=>i)).sort(((ia,ib)=>chars[ib]-chars[ia]||intraIns[ia]-intraIns[ib]||terms[ib]+interLft2[ib]+.5*interLft1[ib]-(terms[ia]+interLft2[ia]+.5*interLft1[ia])||interIns[ia]-interIns[ib]||start[ia]-start[ib]||cmp(haystack[idx[ia]],haystack[idx[ib]])))}},lazyRepeat=(chars,limit)=>0==limit?"":1==limit?chars+"??":limit==inf?chars+"*?":chars+"{0,".concat(limit,"}?");function uFuzzy(opts){var _intraIns2,_intraSub2,_intraTrn2,_intraDel2,_opts$letters;opts=Object.assign({},OPTS,opts);let{unicode:unicode,interLft:interLft,interRgt:interRgt,intraMode:intraMode,intraSlice:intraSlice,intraIns:intraIns,intraSub:intraSub,intraTrn:intraTrn,intraDel:intraDel,intraContr:intraContr,intraSplit:_intraSplit,interSplit:_interSplit,intraBound:_intraBound,interBound:_interBound,intraChars:intraChars}=opts;null!==(_intraIns2=intraIns)&&void 0!==_intraIns2||(intraIns=intraMode),null!==(_intraSub2=intraSub)&&void 0!==_intraSub2||(intraSub=intraMode),null!==(_intraTrn2=intraTrn)&&void 0!==_intraTrn2||(intraTrn=intraMode),null!==(_intraDel2=intraDel)&&void 0!==_intraDel2||(intraDel=intraMode);let alpha=null!==(_opts$letters=opts.letters)&&void 0!==_opts$letters?_opts$letters:opts.alpha;if(null!=alpha){let upper=alpha.toLocaleUpperCase(),lower=alpha.toLocaleLowerCase();_interSplit=swapAlpha(_interSplit,upper,lower),_intraSplit=swapAlpha(_intraSplit,upper,lower),_interBound=swapAlpha(_interBound,upper,lower),_intraBound=swapAlpha(_intraBound,upper,lower),intraChars=swapAlpha(intraChars,upper,lower),intraContr=swapAlpha(intraContr,upper,lower)}let uFlag=unicode?"u":"";const EXACTS_RE=new RegExp('".+?"',"gi"+uFlag),NEGS_RE=new RegExp("(?:\\s+|^)-(?:".concat(intraChars,"+|").concat('".+?"',")"),"gi"+uFlag);let{intraRules:intraRules}=opts;null==intraRules&&(intraRules=p=>{let _intraSlice=OPTS.intraSlice,_intraIns=0,_intraSub=0,_intraTrn=0,_intraDel=0;if(/[^\d]/.test(p)){let plen=p.length;plen<=4?plen>=3&&(_intraTrn=Math.min(intraTrn,1),4==plen&&(_intraIns=Math.min(intraIns,1))):(_intraSlice=intraSlice,_intraIns=intraIns,_intraSub=intraSub,_intraTrn=intraTrn,_intraDel=intraDel)}return{intraSlice:_intraSlice,intraIns:_intraIns,intraSub:_intraSub,intraTrn:_intraTrn,intraDel:_intraDel}});let withIntraSplit=!!_intraSplit,intraSplit=new RegExp(_intraSplit,"g"+uFlag),interSplit=new RegExp(_interSplit,"g"+uFlag),trimRe=new RegExp("^"+_interSplit+"|"+_interSplit+"$","g"+uFlag),contrsRe=new RegExp(intraContr,"gi"+uFlag);const split=needle=>{let exacts=[];needle=(needle=needle.replace(EXACTS_RE,(m=>(exacts.push(m),"eexxaacctt")))).replace(trimRe,"").toLocaleLowerCase(),withIntraSplit&&(needle=needle.replace(intraSplit,(m=>m[0]+" "+m[1])));let j=0;return needle.split(interSplit).filter((t=>""!=t)).map((v=>"eexxaacctt"===v?exacts[j++]:v))},NUM_OR_ALPHA_RE=/[^\d]+|\d+/g,prepQuery=function(needle){let capt=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,interOR=arguments.length>2&&void 0!==arguments[2]&&arguments[2],parts=split(needle);if(0==parts.length)return[];let reTpl,contrs=Array(parts.length).fill("");if(parts=parts.map(((p,pi)=>p.replace(contrsRe,(m=>(contrs[pi]=m,""))))),1==intraMode)reTpl=parts.map(((p,pi)=>{if('"'===p[0])return escapeRegExp(p.slice(1,-1));let reTpl="";for(let m of p.matchAll(NUM_OR_ALPHA_RE)){let p=m[0],{intraSlice:intraSlice,intraIns:intraIns,intraSub:intraSub,intraTrn:intraTrn,intraDel:intraDel}=intraRules(p);if(intraIns+intraSub+intraTrn+intraDel==0)reTpl+=p+contrs[pi];else{let[lftIdx,rgtIdx]=intraSlice,lftChar=p.slice(0,lftIdx),rgtChar=p.slice(rgtIdx),chars=p.slice(lftIdx,rgtIdx);1==intraIns&&1==lftChar.length&&lftChar!=chars[0]&&(lftChar+="(?!"+lftChar+")");let numChars=chars.length,variants=[p];if(intraSub)for(let i=0;i<numChars;i++)variants.push(lftChar+chars.slice(0,i)+intraChars+chars.slice(i+1)+rgtChar);if(intraTrn)for(let i=0;i<numChars-1;i++)chars[i]!=chars[i+1]&&variants.push(lftChar+chars.slice(0,i)+chars[i+1]+chars[i]+chars.slice(i+2)+rgtChar);if(intraDel)for(let i=0;i<numChars;i++)variants.push(lftChar+chars.slice(0,i+1)+"?"+chars.slice(i+1)+rgtChar);if(intraIns){let intraInsTpl=lazyRepeat(intraChars,1);for(let i=0;i<numChars;i++)variants.push(lftChar+chars.slice(0,i)+intraInsTpl+chars.slice(i)+rgtChar)}reTpl+="(?:"+variants.join("|")+")"+contrs[pi]}}return reTpl}));else{let intraInsTpl=lazyRepeat(intraChars,intraIns);2==capt&&intraIns>0&&(intraInsTpl=")("+intraInsTpl+")("),reTpl=parts.map(((p,pi)=>'"'===p[0]?escapeRegExp(p.slice(1,-1)):p.split("").map(((c,i,chars)=>(1==intraIns&&0==i&&chars.length>1&&c!=chars[i+1]&&(c+="(?!"+c+")"),c))).join(intraInsTpl)+contrs[pi]))}let preTpl=2==interLft?"(?:\\b|_)":"",sufTpl=2==interRgt?"(?:\\b|_)":"",interCharsTpl=sufTpl+lazyRepeat(opts.interChars,opts.interIns)+preTpl;return capt>0?interOR?reTpl=preTpl+"("+reTpl.join(")"+sufTpl+"|"+preTpl+"(")+")"+sufTpl:(reTpl="("+reTpl.join(")("+interCharsTpl+")(")+")",reTpl="(.??"+preTpl+")"+reTpl+"("+sufTpl+".*)"):(reTpl=reTpl.join(interCharsTpl),reTpl=preTpl+reTpl+sufTpl),[new RegExp(reTpl,"i"+uFlag),parts,contrs]},filter=(haystack,needle,idxs)=>{let[query]=prepQuery(needle);if(null==query)return null;let out=[];if(null!=idxs)for(let i=0;i<idxs.length;i++){let idx=idxs[i];query.test(haystack[idx])&&out.push(idx)}else for(let i=0;i<haystack.length;i++)query.test(haystack[i])&&out.push(i);return out};let withIntraBound=!!_intraBound,interBound=new RegExp(_interBound,uFlag),intraBound=new RegExp(_intraBound,uFlag);const info=(idxs,haystack,needle)=>{let[query,parts,contrs]=prepQuery(needle,1),[queryR]=prepQuery(needle,2),partsLen=parts.length,len=idxs.length,field=Array(len).fill(0),info={idx:Array(len),start:field.slice(),chars:field.slice(),terms:field.slice(),interIns:field.slice(),intraIns:field.slice(),interLft2:field.slice(),interRgt2:field.slice(),interLft1:field.slice(),interRgt1:field.slice(),ranges:Array(len)},mayDiscard=1==interLft||1==interRgt,ii=0;for(let i=0;i<idxs.length;i++){let mhstr=haystack[idxs[i]],m=mhstr.match(query),start=m.index+m[1].length,idxAcc=start,disc=!1,lft2=0,lft1=0,rgt2=0,rgt1=0,chars=0,terms=0,inter=0,intra=0,refine=[];for(let j=0,k=2;j<partsLen;j++,k+=2){let group=m[k].toLocaleLowerCase(),part=parts[j],term='"'==part[0]?part.slice(1,-1):part+contrs[j],termLen=term.length,groupLen=group.length,fullMatch=group==term;if(!fullMatch&&m[k+1].length>=termLen){let idxOf=m[k+1].toLocaleLowerCase().indexOf(term);idxOf>-1&&(refine.push(idxAcc,groupLen,idxOf,termLen),idxAcc+=refineMatch(m,k,idxOf,termLen),group=term,groupLen=termLen,fullMatch=!0,0==j&&(start=idxAcc))}if(mayDiscard||fullMatch){let lftCharIdx=idxAcc-1,rgtCharIdx=idxAcc+groupLen,isPre=!1,isSuf=!1;if(-1==lftCharIdx||interBound.test(mhstr[lftCharIdx]))fullMatch&&lft2++,isPre=!0;else{if(2==interLft){disc=!0;break}if(withIntraBound&&intraBound.test(mhstr[lftCharIdx]+mhstr[lftCharIdx+1]))fullMatch&&lft1++,isPre=!0;else if(1==interLft){let junk=m[k+1],junkIdx=idxAcc+groupLen;if(junk.length>=termLen){let m2,idxOf=0,found=!1,re=new RegExp(term,"ig"+uFlag);for(;m2=re.exec(junk);){idxOf=m2.index;let charIdx=junkIdx+idxOf,lftCharIdx=charIdx-1;if(-1==lftCharIdx||interBound.test(mhstr[lftCharIdx])){lft2++,found=!0;break}if(intraBound.test(mhstr[lftCharIdx]+mhstr[charIdx])){lft1++,found=!0;break}}found&&(isPre=!0,refine.push(idxAcc,groupLen,idxOf,termLen),idxAcc+=refineMatch(m,k,idxOf,termLen),group=term,groupLen=termLen,fullMatch=!0,0==j&&(start=idxAcc))}if(!isPre){disc=!0;break}}}if(rgtCharIdx==mhstr.length||interBound.test(mhstr[rgtCharIdx]))fullMatch&&rgt2++,isSuf=!0;else{if(2==interRgt){disc=!0;break}if(withIntraBound&&intraBound.test(mhstr[rgtCharIdx-1]+mhstr[rgtCharIdx]))fullMatch&&rgt1++,isSuf=!0;else if(1==interRgt){disc=!0;break}}fullMatch&&(chars+=termLen,isPre&&isSuf&&terms++)}if(groupLen>termLen&&(intra+=groupLen-termLen),j>0&&(inter+=m[k-1].length),!opts.intraFilt(term,group,idxAcc)){disc=!0;break}j<partsLen-1&&(idxAcc+=groupLen+m[k+1].length)}if(!disc){info.idx[ii]=idxs[i],info.interLft2[ii]=lft2,info.interLft1[ii]=lft1,info.interRgt2[ii]=rgt2,info.interRgt1[ii]=rgt1,info.chars[ii]=chars,info.terms[ii]=terms,info.interIns[ii]=inter,info.intraIns[ii]=intra,info.start[ii]=start;let m=mhstr.match(queryR),idxAcc=m.index+m[1].length,refLen=refine.length,ri=refLen>0?0:1/0,lastRi=refLen-4;for(let i=2;i<m.length;){let len=m[i].length;if(ri<=lastRi&&refine[ri]==idxAcc){let groupLen=refine[ri+1],idxOf=refine[ri+2],termLen=refine[ri+3],j=i,v="";for(let _len=0;_len<groupLen;j++)v+=m[j],_len+=m[j].length;m.splice(i,j-i,v),idxAcc+=refineMatch(m,i,idxOf,termLen),ri+=4}else idxAcc+=len,i++}idxAcc=m.index+m[1].length;let ranges=info.ranges[ii]=[],from=idxAcc,to=idxAcc;for(let i=2;i<m.length;i++){let len=m[i].length;idxAcc+=len,i%2==0?to=idxAcc:len>0&&(ranges.push(from,to),from=to=idxAcc)}to>from&&ranges.push(from,to),ii++}}if(ii<idxs.length)for(let k in info)info[k]=info[k].slice(0,ii);return info},refineMatch=(m,k,idxInNext,termLen)=>{let prepend=m[k]+m[k+1].slice(0,idxInNext);return m[k-1]+=prepend,m[k]=m[k+1].slice(idxInNext,idxInNext+termLen),m[k+1]=m[k+1].slice(idxInNext+termLen),prepend.length},_search=function(haystack,needle,outOfOrder){let infoThresh=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e3,preFiltered=arguments.length>4?arguments[4]:void 0;outOfOrder=outOfOrder?!0===outOfOrder?5:outOfOrder:0;let needles=null,matches=null,negs=[];needle=needle.replace(NEGS_RE,(m=>{let neg=m.trim().slice(1);return neg='"'===neg[0]?escapeRegExp(neg.slice(1,-1)):neg.replace(PUNCT_RE,""),""!=neg&&negs.push(neg),""}));let negsRe,terms=split(needle);if(negs.length>0){if(negsRe=new RegExp(negs.join("|"),"i"+uFlag),0==terms.length){let idxs=[];for(let i=0;i<haystack.length;i++)negsRe.test(haystack[i])||idxs.push(i);return[idxs,null,null]}}else if(0==terms.length)return[null,null,null];if(outOfOrder>0){let terms=split(needle);if(terms.length>1){let terms2=terms.slice().sort(((a,b)=>b.length-a.length));for(let ti=0;ti<terms2.length;ti++){var _preFiltered;if(0==(null===(_preFiltered=preFiltered)||void 0===_preFiltered?void 0:_preFiltered.length))return[[],null,null];preFiltered=filter(haystack,terms2[ti],preFiltered)}if(terms.length>outOfOrder)return[preFiltered,null,null];needles=permute(terms).map((perm=>perm.join(" "))),matches=[];let matchedIdxs=new Set;for(let ni=0;ni<needles.length;ni++)if(matchedIdxs.size<preFiltered.length){let preFiltered2=preFiltered.filter((idx=>!matchedIdxs.has(idx))),matched=filter(haystack,needles[ni],preFiltered2);for(let j=0;j<matched.length;j++)matchedIdxs.add(matched[j]);matches.push(matched)}else matches.push([])}}var _preFiltered2;null==needles&&(needles=[needle],matches=[(null===(_preFiltered2=preFiltered)||void 0===_preFiltered2?void 0:_preFiltered2.length)>0?preFiltered:filter(haystack,needle)]);let retInfo=null,retOrder=null;negs.length>0&&(matches=matches.map((idxs=>idxs.filter((idx=>!negsRe.test(haystack[idx]))))));let matchCount=matches.reduce(((acc,idxs)=>acc+idxs.length),0);if(matchCount<=infoThresh){retInfo={},retOrder=[];for(let ni=0;ni<matches.length;ni++){let idxs=matches[ni];if(null==idxs||0==idxs.length)continue;let needle=needles[ni],_info=info(idxs,haystack,needle),order=opts.sort(_info,haystack,needle);if(ni>0)for(let i=0;i<order.length;i++)order[i]+=retOrder.length;for(let k in _info){var _retInfo$k;retInfo[k]=(null!==(_retInfo$k=retInfo[k])&&void 0!==_retInfo$k?_retInfo$k:[]).concat(_info[k])}retOrder=retOrder.concat(order)}}return[[].concat(...matches),retInfo,retOrder]};return{search:function(){let out=_search(...arguments);return out},split:split,filter:filter,info:info,sort:opts.sort}}const latinize=(()=>{let accents={A:"ÁÀÃÂÄĄ",a:"áàãâäą",E:"ÉÈÊËĖ",e:"éèêëę",I:"ÍÌÎÏĮ",i:"íìîïį",O:"ÓÒÔÕÖ",o:"óòôõö",U:"ÚÙÛÜŪŲ",u:"úùûüūų",C:"ÇČĆ",c:"çčć",L:"Ł",l:"ł",N:"ÑŃ",n:"ñń",S:"ŠŚ",s:"šś",Z:"ŻŹ",z:"żź"},accentsMap=new Map,accentsTpl="";for(let r in accents)accents[r].split("").forEach((a=>{accentsTpl+=a,accentsMap.set(a,r)}));let accentsRe=new RegExp("[".concat(accentsTpl,"]"),"g"),replacer=m=>accentsMap.get(m);return strings=>{if("string"==typeof strings)return strings.replace(accentsRe,replacer);let out=Array(strings.length);for(let i=0;i<strings.length;i++)out[i]=strings[i].replace(accentsRe,replacer);return out}})();function permute(arr){let k,p,length=(arr=arr.slice()).length,result=[arr.slice()],c=new Array(length).fill(0),i=1;for(;i<length;)c[i]<i?(k=i%2&&c[i],p=arr[i],arr[i]=arr[k],arr[k]=p,++c[i],i=1,result.push(arr.slice())):(c[i]=0,++i);return result}const _mark=(part,matched)=>matched?"<mark>".concat(part,"</mark>"):part,_append=(acc,part)=>acc+part;return uFuzzy.latinize=latinize,uFuzzy.permute=arr=>permute([...Array(arr.length).keys()]).sort(((a,b)=>{for(let i=0;i<a.length;i++)if(a[i]!=b[i])return a[i]-b[i];return 0})).map((pi=>pi.map((i=>arr[i])))),uFuzzy.highlight=function(str,ranges){var _append2,_append5;let mark=arguments.length>2&&void 0!==arguments[2]?arguments[2]:_mark,accum=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",append=arguments.length>4&&void 0!==arguments[4]?arguments[4]:_append;accum=null!==(_append2=append(accum,mark(str.substring(0,ranges[0]),!1)))&&void 0!==_append2?_append2:accum;for(let i=0;i<ranges.length;i+=2){var _append3,_append4;let fr=ranges[i],to=ranges[i+1];accum=null!==(_append3=append(accum,mark(str.substring(fr,to),!0)))&&void 0!==_append3?_append3:accum,i<ranges.length-3&&(accum=null!==(_append4=append(accum,mark(str.substring(ranges[i+1],ranges[i+2]),!1)))&&void 0!==_append4?_append4:accum)}return accum=null!==(_append5=append(accum,mark(str.substring(ranges[ranges.length-1]),!1)))&&void 0!==_append5?_append5:accum,accum},uFuzzy}(),_default={uFuzzy:uFuzzy};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=ufuzzy.min.js.map
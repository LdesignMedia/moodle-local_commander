define("local_commander/settings",["exports","core/str","core/notification","core/log"],(function(_exports,_str,_notification,_log){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Helper for keycodes
   *
   * Tested in Moodle 3.8
   *
   * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @copyright 2019 MFreak.nl
   * @author    Luuk Verhoeven
   **/function init(){const el=document.getElementById("id_s_local_commander_keys");el&&((0,_str.getString)("js:keycode_help","local_commander").then((message=>{el.insertAdjacentHTML("beforebegin",'\n                <div class="alert alert-info" id="key-monitor">\n                    <b>'.concat(message,"</b>\n                    <div></div>\n                </div>\n            "))})).catch(_notification.default.exception),document.addEventListener("keydown",(e=>{const tagName=e.target.tagName.toUpperCase();if("INPUT"===tagName||"SELECT"===tagName||"TEXTAREA"===tagName||e.target.isContentEditable)return void _log.default.debug("Key event ignored in editable element");const keyboardCode=e.keyCode||e.which,monitorDiv=document.querySelector("#key-monitor div");monitorDiv&&(monitorDiv.textContent="key = ".concat(e.key," | code = ").concat(keyboardCode))})))}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_notification=_interopRequireDefault(_notification),_log=_interopRequireDefault(_log),document.addEventListener("DOMContentLoaded",(()=>{_log.default.debug("DOM fully loaded - initializing commander settings"),init()}));var _default={init:init};return _exports.default=_default,_exports.default}));

//# sourceMappingURL=settings.min.js.map
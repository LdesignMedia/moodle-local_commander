{"version":3,"file":"settings.min.js","sources":["../src/settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Helper for keycodes\n *\n * Tested in Moodle 3.8\n *\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @copyright 2019 MFreak.nl\n * @author    Luuk Verhoeven\n **/\n\nimport {getString} from 'core/str';\nimport Notification from 'core/notification';\nimport Log from 'core/log';\n\n/**\n * Initialize the commander settings.\n */\nfunction init() {\n    const el = document.getElementById('id_s_local_commander_keys');\n\n    if (!el) {\n        return;\n    }\n\n    getString('js:keycode_help', 'local_commander')\n        .then((message) => {\n            el.insertAdjacentHTML('beforebegin', `\n                <div class=\"alert alert-info\" id=\"key-monitor\">\n                    <b>${message}</b>\n                    <div></div>\n                </div>\n            `);\n        })\n        .catch(Notification.exception);\n\n    document.addEventListener('keydown', (e) => {\n        const tagName = e.target.tagName.toUpperCase();\n\n        if (\n            tagName === 'INPUT' ||\n            tagName === 'SELECT' ||\n            tagName === 'TEXTAREA' ||\n            e.target.isContentEditable\n        ) {\n            Log.debug('Key event ignored in editable element');\n            return;\n        }\n\n        const keyboardCode = e.keyCode || e.which;\n        const monitorDiv = document.querySelector('#key-monitor div');\n        if (monitorDiv) {\n            monitorDiv.textContent = `key = ${e.key} | code = ${keyboardCode}`;\n        }\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    Log.debug('DOM fully loaded - initializing commander settings');\n    init();\n});\n\nexport default {\n    init,\n};\n"],"names":["init","el","document","getElementById","then","message","insertAdjacentHTML","catch","Notification","exception","addEventListener","e","tagName","target","toUpperCase","isContentEditable","debug","keyboardCode","keyCode","which","monitorDiv","querySelector","textContent","key"],"mappings":";;;;;;;;;eAgCSA,aACCC,GAAKC,SAASC,eAAe,6BAE9BF,wBAIK,kBAAmB,mBACxBG,MAAMC,UACHJ,GAAGK,mBAAmB,kHAETD,2FAKhBE,MAAMC,sBAAaC,WAExBP,SAASQ,iBAAiB,WAAYC,UAC5BC,QAAUD,EAAEE,OAAOD,QAAQE,iBAGjB,UAAZF,SACY,WAAZA,SACY,aAAZA,SACAD,EAAEE,OAAOE,2CAELC,MAAM,+CAIRC,aAAeN,EAAEO,SAAWP,EAAEQ,MAC9BC,WAAalB,SAASmB,cAAc,oBACtCD,aACAA,WAAWE,4BAAuBX,EAAEY,yBAAgBN,yLAKhEf,SAASQ,iBAAiB,oBAAoB,kBACtCM,MAAM,sDACVhB,uBAGW,CACXA,KAAAA"}